version: '3.8'

services:
  # Jaeger - Distributed tracing UI and storage
  jaeger:
    image: jaegertracing/all-in-one:1.50
    container_name: knowledgehub-jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # Jaeger collector HTTP
      - "14250:14250"  # Jaeger collector gRPC
      - "6831:6831/udp"  # Jaeger agent UDP
      - "6832:6832/udp"  # Jaeger agent UDP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    volumes:
      - jaeger_data:/tmp
    networks:
      - tracing
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:16686/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # OpenTelemetry Collector - Telemetry data processing
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.88.0
    container_name: knowledgehub-otel-collector
    restart: unless-stopped
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # Health check
    volumes:
      - ./otel-collector/otel-collector.yml:/etc/otel-collector.yml
    command: ["--config=/etc/otel-collector.yml"]
    networks:
      - tracing
      - monitoring
    depends_on:
      - jaeger
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:13133/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Zipkin - Alternative tracing backend
  zipkin:
    image: openzipkin/zipkin:2.24
    container_name: knowledgehub-zipkin
    restart: unless-stopped
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=mem
    networks:
      - tracing
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9411/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Tempo - High-scale distributed tracing backend
  tempo:
    image: grafana/tempo:2.2.3
    container_name: knowledgehub-tempo
    restart: unless-stopped
    ports:
      - "3200:3200"   # Tempo HTTP
      - "4317:4317"   # OTLP gRPC (conflicts with otel-collector, use different port in production)
    volumes:
      - ./tempo/tempo.yml:/etc/tempo.yaml
      - tempo_data:/var/tempo
    command: ["-config.file=/etc/tempo.yaml"]
    networks:
      - tracing
    depends_on:
      - otel-collector

  # Grafana with tracing datasource
  grafana-tracing:
    image: grafana/grafana:10.1.0
    container_name: knowledgehub-grafana-tracing
    restart: unless-stopped
    ports:
      - "3031:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    volumes:
      - grafana_tracing_data:/var/lib/grafana
      - ./grafana-tracing/provisioning:/etc/grafana/provisioning
      - ./grafana-tracing/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - tracing
      - monitoring
    depends_on:
      - jaeger
      - tempo

volumes:
  jaeger_data:
    driver: local
  tempo_data:
    driver: local
  grafana_tracing_data:
    driver: local

networks:
  tracing:
    driver: bridge
  monitoring:
    external: true