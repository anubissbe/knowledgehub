version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: knowledgehub-postgres
    environment:
      POSTGRES_USER: knowledgehub
      POSTGRES_PASSWORD: knowledgehub
      POSTGRES_DB: knowledgehub
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U knowledgehub"]
      interval: 10s
      timeout: 5s
      retries: 5

  knowledgehub-api:
    build: .
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://knowledgehub:knowledgehub@postgres:5432/knowledgehub
      REDIS_URL: redis://redis:6379
      WEAVIATE_URL: http://weaviate:8080
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: knowledgehub123
      API_HOST: 0.0.0.0
      API_PORT: 3000
      PROMETHEUS_PORT: 9090
      ENABLE_ALERTING: "true"
      ENABLE_AB_TESTING: "true"
      ENVIRONMENT: production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      weaviate:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./start_api.py:/app/start_api.py:ro
      - ./config.json:/app/config.json:ro
    command: python start_api.py

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

volumes:
  postgres_data:
  prometheus_data: