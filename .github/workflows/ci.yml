name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: knowledgehub_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run:  < /dev/null | 
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run code quality checks
      run: |
        python -m flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        python -m flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run type checking
      run: |
        python -m mypy src/ --ignore-missing-imports
    
    - name: Run tests
      env:
        DATABASE_URL: postgresql://postgres:password@localhost:5432/knowledgehub_test
        REDIS_URL: redis://localhost:6379/0
      run: |
        python test_code_quality.py
        python test_imports.py
        python test_structure.py
  
  frontend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "18"
        cache: "npm"
        cache-dependency-path: src/web-ui/package-lock.json
    
    - name: Install dependencies
      run: |
        cd src/web-ui
        npm ci
    
    - name: Run linting
      run: |
        cd src/web-ui
        npm run lint
    
    - name: Build frontend
      run: |
        cd src/web-ui
        npm run build
    
    - name: Run tests
      run: |
        cd src/web-ui
        npm test || echo "No tests configured yet"

  docker-build:
    runs-on: ubuntu-latest
    needs: [test, frontend-test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Test Docker build
      run: |
        docker compose build --no-cache
    
    - name: Test Docker services
      run: |
        docker compose up -d
        sleep 30
        docker compose ps
        docker compose logs
        docker compose down
