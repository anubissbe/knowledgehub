
version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: knowledgehub
      POSTGRES_USER: knowledgehub
      POSTGRES_PASSWORD: knowledgehub_prod_2025
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U knowledgehub -d knowledgehub"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped

  timescale:
    image: timescale/timescaledb:latest-pg15
    environment:
      POSTGRES_DB: knowledgehub
      POSTGRES_USER: knowledgehub
      POSTGRES_PASSWORD: knowledgehub_prod_2025
    ports:
      - "5434:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U knowledgehub -d knowledgehub"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped

  redis:
    image: redis:7
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  api:
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://knowledgehub:knowledgehub_prod_2025@postgres:5432/knowledgehub
      - TIMESCALE_URL=postgresql://knowledgehub:knowledgehub_prod_2025@timescale:5432/knowledgehub
      - REDIS_URL=redis://redis:6379
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      timescale:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  webui:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3100:3000"
    depends_on:
      api:
        condition: service_healthy
    environment:
      - REACT_APP_API_URL=http://192.168.1.25:3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
  timescale_data:
  redis_data:
  weaviate_data:
  neo4j_data:
  minio_data:

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
